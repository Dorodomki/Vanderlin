# .github/workflows/add-issue-to-project.yml
name: Add issue to project + set DateAdded
on:
  issues:
    types: [opened]

jobs:
  add-to-project:
    runs-on: ubuntu-latest
    steps:
      - name: Get project node id
        env:
          GH_TOKEN: ${{ secrets.TRIAGE_TOKEN }}    # token avec accÃ¨s au Project (PAT) ou GitHub App token
        run: |
          PROJECT_ID=$(gh api graphql -f query='query { organization(login:"Monkestation"){ projectV2(number: 12){ id } } }' -H "Authorization: Bearer $GH_TOKEN" --jq '.data.organization.projectV2.id')
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV

      - name: Add issue to project
        env:
          GH_TOKEN: ${{ secrets.TRIAGE_TOKEN }}
        run: |
          ITEM_ID=$(gh api graphql -f query='mutation($projectId:ID!, $contentId:ID!){ addProjectV2ItemById(input:{projectId:$projectId, contentId:$contentId}){ item{ id } } }' -F projectId="$PROJECT_ID" -F contentId="${{ github.event.issue.node_id }}" -H "Authorization: Bearer $GH_TOKEN" --jq '.data.addProjectV2ItemById.item.id')
          echo "ITEM_ID=$ITEM_ID" >> $GITHUB_ENV

      - name: Set DateAdded field
        env:
          GH_TOKEN: ${{ secrets.TRIAGE_TOKEN }}
        run: |
          DATE=$(date +%F)
          # Remplace FIELD_ID par le node id de ton champ date dans le projet
          gh api graphql -f query='mutation($projectId:ID!, $itemId:ID!, $fieldId:ID!, $date:String!){ updateProjectV2ItemFieldValue(input:{projectId:$projectId, itemId:$itemId, fieldId:$fieldId, value:{date:$date}}){ projectV2Item{ id } } }' \
            -F projectId="$PROJECT_ID" -F itemId="$ITEM_ID" -F fieldId="FIELD_ID" -F date="$DATE" \
            -H "Authorization: Bearer $GH_TOKEN"
